using Test

include("code.jl") # Функция кодировки
include("decode.jl") # Функция декодировки

# хотя бы показывает строку теста, где не прошёл
# В Linux удобно оказалось:
# julia test_decode.jl | grep "Expression: decode("
@testset "Decode" begin
    @test decode(2, 1, 8) == "0,0,1,2,3,4,5,6"
    @test decode(3, 1, 9) == "0,0,0,0,0,0,1,2,3"
    @test decode(2, 1, 20) == "0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18"
    @test decode(3, 1, 18) == "0,0,0,0,0,0,1,2,3,4,5,6,7,8,9,10,11,12"
    @test decode(4, 1, 20) == "0,0,0,0,0,0,0,0,0,0,0,0,1,2,3,4,5,6,7,8"
    @test decode(7, 1, 20) == "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"
    @test decode(2, 1, 11) == "0,0,1,2,3,4,5,6,7,8,9"
    @test decode(3, 1, 23) == "0,0,0,0,0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17"
    @test decode(2, 2, 8) == "0,0,0,0,1,2,3,4"

    @test decode(2, 2, 10) == "0,0,0,0,1,2,3,4,5,6"
    @test decode(2, 3, 10) == "0,0,0,0,0,0,1,2,3,4"
    @test decode(2, 3, 11) == "0,0,0,0,0,0,1,2,3,4,5"

    @test decode(5, 3, 17) == "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"
    @test decode(2, 7, 23) == "0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,3,4,5,6,7,8,9"

    # Этот тест не срабатывает из-за того, что dn сдвиг не правильно рассчитывается для этих данных,
    # по моему там должно быть 24 12 0 для элементов, а у меня считает 24 21 0. Какая-та правильная формула должна быть для шага.
    #@test decode(3, 4, 50) == "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26"
end
